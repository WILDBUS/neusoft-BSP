{"remainingRequest":"E:\\实训\\实训\\frontend\\node_modules\\babel-loader\\lib\\index.js!E:\\实训\\实训\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\实训\\实训\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\实训\\实训\\frontend\\src\\views\\system\\user\\profile\\userInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\实训\\实训\\frontend\\src\\views\\system\\user\\profile\\userInfo.vue","mtime":1594017550810},{"path":"E:\\实训\\实训\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\实训\\实训\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\实训\\实训\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\实训\\实训\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _user = require(\"@/api/system/user\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  props: {\n    user: {\n      type: Object\n    }\n  },\n  data: function data() {\n    return {\n      // 表单校验\n      rules: {\n        nickName: [{\n          required: true,\n          message: \"Nickname cannot be empty\",\n          trigger: \"blur\"\n        }],\n        email: [{\n          required: true,\n          message: \"Email address cannot be empty\",\n          trigger: \"blur\"\n        }, {\n          type: \"email\",\n          message: \"Please input the correct email address\",\n          trigger: [\"blur\", \"change\"]\n        }],\n        phonenumber: [{\n          required: true,\n          message: \"Phone number can not be empty\",\n          trigger: \"blur\"\n        }, {\n          pattern: /^1[3|4|5|6|7|8|9][0-9]\\d{8}$/,\n          message: \"Please enter the correct phone number\",\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  methods: {\n    submit: function submit() {\n      var _this = this;\n\n      this.$refs[\"form\"].validate(function (valid) {\n        if (valid) {\n          (0, _user.updateUserProfile)(_this.user).then(function (response) {\n            if (response.code === 200) {\n              _this.msgSuccess(\"Success\");\n            }\n          });\n        }\n      });\n    },\n    close: function close() {\n      this.$store.dispatch(\"tagsView/delView\", this.$route);\n      this.$router.push({\n        path: \"/index\"\n      });\n    }\n  }\n};\nexports.default = _default;",{"version":3,"sources":["userInfo.vue"],"names":[],"mappings":";;;;;;;AAyBA;;;;;;;;;;;;;;;;;;;;;;;;;;eAEA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA;AADA,GADA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA;AACA,MAAA,KAAA,EAAA;AACA,QAAA,QAAA,EAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,0BAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA,CADA;AAIA,QAAA,KAAA,EAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,+BAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA,EAEA;AACA,UAAA,IAAA,EAAA,OADA;AAEA,UAAA,OAAA,EAAA,wCAFA;AAGA,UAAA,OAAA,EAAA,CAAA,MAAA,EAAA,QAAA;AAHA,SAFA,CAJA;AAYA,QAAA,WAAA,EAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,+BAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA,EAEA;AACA,UAAA,OAAA,EAAA,8BADA;AAEA,UAAA,OAAA,EAAA,uCAFA;AAGA,UAAA,OAAA,EAAA;AAHA,SAFA;AAZA;AAFA,KAAA;AAwBA,GA/BA;AAgCA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,oBACA;AAAA;;AACA,WAAA,KAAA,CAAA,MAAA,EAAA,QAAA,CAAA,UAAA,KAAA,EAAA;AACA,YAAA,KAAA,EAAA;AACA,uCAAA,KAAA,CAAA,IAAA,EAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,gBAAA,QAAA,CAAA,IAAA,KAAA,GAAA,EAAA;AACA,cAAA,KAAA,CAAA,UAAA,CAAA,SAAA;AACA;AACA,WAJA;AAKA;AACA,OARA;AASA,KAXA;AAYA,IAAA,KAZA,mBAYA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,kBAAA,EAAA,KAAA,MAAA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAAA;AACA;AAfA;AAhCA,C","sourcesContent":["<template>\r\n  <el-form ref=\"form\" :model=\"user\" :rules=\"rules\" label-width=\"80px\">\r\n    <el-form-item label=\"Nickname\" prop=\"nickName\">\r\n      <el-input v-model=\"user.nickName\" />\r\n    </el-form-item> \r\n    <el-form-item label=\"Phone\" prop=\"phonenumber\">\r\n      <el-input v-model=\"user.phonenumber\" maxlength=\"11\" />\r\n    </el-form-item>\r\n    <el-form-item label=\"E-mail\" prop=\"email\">\r\n      <el-input v-model=\"user.email\" maxlength=\"50\" />\r\n    </el-form-item>\r\n    <el-form-item label=\"Gender\">\r\n      <el-radio-group v-model=\"user.sex\">\r\n        <el-radio label=\"0\">male</el-radio>\r\n        <el-radio label=\"1\">female</el-radio>\r\n      </el-radio-group>\r\n    </el-form-item>\r\n    <el-form-item>\r\n      <el-button type=\"primary\" size=\"mini\" @click=\"submit\">submit</el-button>\r\n      <el-button type=\"danger\" size=\"mini\" @click=\"close\">close</el-button>\r\n    </el-form-item>\r\n  </el-form>\r\n</template>\r\n\r\n<script>\r\nimport { updateUserProfile } from \"@/api/system/user\";\r\n\r\nexport default {\r\n  props: {\r\n    user: {\r\n      type: Object\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      // 表单校验\r\n      rules: {\r\n        nickName: [\r\n          { required: true, message: \"Nickname cannot be empty\", trigger: \"blur\" }\r\n        ],\r\n        email: [\r\n          { required: true, message: \"Email address cannot be empty\", trigger: \"blur\" },\r\n          {\r\n            type: \"email\",\r\n            message: \"Please input the correct email address\",\r\n            trigger: [\"blur\", \"change\"]\r\n          }\r\n        ],\r\n        phonenumber: [\r\n          { required: true, message: \"Phone number can not be empty\", trigger: \"blur\" },\r\n          {\r\n            pattern: /^1[3|4|5|6|7|8|9][0-9]\\d{8}$/,\r\n            message: \"Please enter the correct phone number\",\r\n            trigger: \"blur\"\r\n          }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    submit() {\r\n      this.$refs[\"form\"].validate(valid => {\r\n        if (valid) {\r\n          updateUserProfile(this.user).then(response => {\r\n            if (response.code === 200) {\r\n              this.msgSuccess(\"Success\");\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    close() {\r\n      this.$store.dispatch(\"tagsView/delView\", this.$route);\r\n      this.$router.push({ path: \"/index\" });\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"sourceRoot":"src/views/system/user/profile"}]}